Some open tasks, good for getting started with the code base ;)

 * allow to move songs on the playlist around, maybe use J/K to move down/up

 * Add option to skip (move!) over an album

 * Add command insert-album (similar to add-album)

 * Try to stay at currently selected song on ListWidget.update

 * Sort library on (Artist, Album, Disc, Track)

 * Update filter-view after update

 * Add volume control (depending on output type in /etc/mpd.con this will work
   global/ALSA or app based/pulse)

 * Detect errors on :source (see TODO in Command.hs)

 * filterPreview is very slow if you append to the beginning of the search
   term.  Can we fix this by using a `Map` as cache?

 * Use a zipper for ListWidget

 * Add command :set autofollow=<timeout>, that automatically sets the
   cursor position in the playlist widget to the current song, when the current
   song changes (but only if the cursor has not been moved for <timeout>
   seconds)

 * The git version of MPD reveals the base path to the music library, so we can
   use it as a default for set-library-path

 * Allow to customize formatting for playlist/library/browser

 * Make sure that :insert works on directories/playlists/playlist items

 * Add support for command aliases, say ":map :exit :quit<cr>"

 * Find out whether search is faster if we use Text or even the UTF-8 encoded
   ByteString for matching.

 * use strict-concurrency?

 * update :help and :map output when mappings are added/removed,
   currently they are only updated after after typing :help/:map again

 * Write startup message with current date into log

 * Detect when date has changed since last log message, and write a day
   changed message in those cases

 :help ideas:

 * Show all macros in the default output as well? Currently only macros that
   correspond to a single command with no arguments are shown.

 * Parameterize :help, :help <macro/command> would pull up a TextWidget with
   the documentation for that particular command.

 * Remember the position of the cursor on the :help screen in between opening
   and closing it multiple times.


ISSUES:

 * The actual value of a ctrl-key-combinations depends on the terminal, so
   we may need to make some effort to get that right in a portable way

 * We still have some startup flicker.  My current guess is, that we only get
   rid of it if we fetch all data to draw the initial screen before calling
   initscr/start_color.

 * Breaks in ugly ways when losing connection to MPD

 * Browser needs to reload the current directory on EvLibraryChanged, this
   should be done by recursively moving in from the TLD downwards as far as
   possible.
